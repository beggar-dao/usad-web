name: Deploy Web Project

on:
  push:
    branches: ['main'] # 只在 main 分支推送时触发
  workflow_dispatch: # 允许手动触发

env:
  SERVER_DEPLOY_PATH: '/data/apps/nginx/www/usad-web' # 服务器上的部署路径

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. 拉取代码
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. 安装 Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # 指定 Node 版本

      # 3. 安装依赖并构建
      - name: Install and Build
        run: |
          npm install
          npm run build

      # 4. 将 PEM 密钥写入文件（用于 SSH/SCP）
      - name: Create SSH Key File
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy.pem
          chmod 600 ~/.ssh/deploy.pem

      # 5. 上传 dist/ 到服务器
      - name: Upload dist via SCP
        run: |
          scp -o StrictHostKeyChecking=no \
              -i ~/.ssh/deploy.pem \
              -r ./dist/* \
              ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:$SERVER_DEPLOY_PATH/

      # 6. 重启服务
      - name: Run Remote Commands
        run: |
          ssh -o StrictHostKeyChecking=no \
              -i ~/.ssh/deploy.pem \
              ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
          cd /data/apps/nginx/
          sudo docker compose restart
          EOF

      # 7. 成功后发送 Lark 通知
      - name: Notify Lark on Success
        if: success() # 仅在成功时触发
        uses: actions/github-script@v7
        env:
          LARK_WEBHOOK: ${{ secrets.LARK_WEBHOOK_URL }}
        with:
          script: |
            const message = {
              msg_type: "text",
              content: {
                text: "✅ 部署成功！\n- 项目: ${{ github.repository }}\n- 分支: ${{ github.ref }}\n- 触发者: ${{ github.actor }}\n- 详情: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
              }
            };
            await fetch(process.env.LARK_WEBHOOK, {
              method: 'POST',
              body: JSON.stringify(message),
              headers: { 'Content-Type': 'application/json' }
            });

      - name: Notify Lark on Failure
        if: failure() # 仅在失败时触发
        uses: actions/github-script@v7
        env:
          LARK_WEBHOOK: ${{ secrets.LARK_WEBHOOK_URL }}
        with:
          script: |
            const message = {
              msg_type: "text",
              content: {
                text: "❌ 部署失败！\n- 项目: ${{ github.repository }}\n- 分支: ${{ github.ref }}\n- 触发者: ${{ github.actor }}\n- 日志: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
              }
            };
            await fetch(process.env.LARK_WEBHOOK, {
              method: 'POST',
              body: JSON.stringify(message),
              headers: { 'Content-Type': 'application/json' }
            });
